/*
 * Keycloak Admin REST API
 *
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserConsentRepresentation {
    #[serde(rename = "clientId", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    #[serde(rename = "grantedClientScopes", skip_serializing_if = "Option::is_none")]
    pub granted_client_scopes: Option<Vec<String>>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i64>,
    #[serde(rename = "lastUpdatedDate", skip_serializing_if = "Option::is_none")]
    pub last_updated_date: Option<i64>,
    #[serde(rename = "grantedRealmRoles", skip_serializing_if = "Option::is_none")]
    pub granted_realm_roles: Option<Vec<String>>,
}

impl UserConsentRepresentation {
    pub fn new() -> UserConsentRepresentation {
        UserConsentRepresentation {
            client_id: None,
            granted_client_scopes: None,
            created_date: None,
            last_updated_date: None,
            granted_realm_roles: None,
        }
    }
}

